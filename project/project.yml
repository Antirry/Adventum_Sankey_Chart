vars:

  # Просмотр УНИКАЛЬНЫХ дат из данных таблицы Events
  # Может быть True или False

  see_dates: False

  # Название таблицы, ОБЯЗАТЕЛЬНО, включает столбцы:

    # appmetrica_device_id STRING\INT,
    # session_id STRING\INT,
    # event_name STRING,
    # event_datetime STRING
    
  table_name: incremental_appmetrica_events_maxi_events

  # Создание диапазона дат для понимания, 
    # за какой промежуток времени нам нужны события
  time_after: "2024-10-31"
  time_before: "2024-10-31"



  # Что будет брать из сессий keep - delete - generate - keep_entire - generate_ALL

  # Пояснение про режимы:
  # keep 
      # - оставит сессии, даже которые начались\закончились вне периода дат,
        # но входят в период дат хотя бы одной записью

  # delete 
      # - оставит все данные входящие в диапазон дат ("time_after", "time_before") 

  # generate 
      # - добавит к тем местам где не хватает событий (В начало\Конец)
        # out_of_range

  # keep_entire
      # - удалит сессии, которые не имеют начала в диапазоне дат
      
  # generate_ALL 
      # - сгенерирует шаги того, как мог бы пойти пользователь
        # с того момента, где остановилась сессия
  include_events: keep_entire



  # Разделение сессий в часах,
    # Нужно для понимания за сколько
      # Часов делить события на отдельные сессии
  session_time: 12

  # Построение графика на определенное количество шагов,
    # Если взять все шаги не будет работать программа,
      # Поэтому я взял за переменную, сколько шагов будет отображаться
  max_step_target: 10

  # Определение отвалов на шаге
    # Это когда, путь заканчивается, напримере, на 2 шаге
      # Будет добавляться 3_end_of_path, ..., (max_step_target) _end_of_path
        # И нужно понять сколько не дошло до последнего шага
          # Имеет True и False
  end_of_path: False